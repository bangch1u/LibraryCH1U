@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model PagedList<LibraryData.Data.Book>
@{
    ViewData["Title"] = "Index";
}
<script>
    // JavaScript để điều hướng đến trang đọc sách
    function openBook() {
        window.location.href = "https://online.fliphtml5.com/eohou/bonj/#p=6";
    }
</script>
<h1>Index</h1>
<p>
<a asp-action="Create" >Create New</a>
    <div class="container ">
        <div class="row justify-content-center">
            @foreach (var item in Model)
            {
                <div class="col-md-2 my-md-2">
                    <div class="card" style="width: 200px;">
                        <div class="card-header d-flex justify-content-center align-items-center" style="height: 160px;">
                            <img src="@item.ImgFile" style="max-height: 150px; max-width: 100px;" class="card-img-top" alt="..." />
                        </div>

                        <div class="card-body">
                            <h5 class="card-title">@item.BookName</h5>
                            <p class="card-text">
                                @if (item.Authors != null && item.Authors.Any())
                                {
                                    @string.Join(", ", item.Authors.Select(a => a.AuthorName))
                                }
                                else
                                {
                                    <span>Unknown Author</span>
                                }
                            </p>
                            <a asp-controller="Book" asp-action="Edit" asp-route-id="@item.BookId">Edit</a>
                            <a asp-controller="Book" asp-action="deleteBook" asp-route-id="@item.BookId" class="btn btn-primary">Delete</a>
                            <button class="btn-read" onclick="openBook()">Đọc Sách</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

<br/>

    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Model.PageCount; i++) // Khai báo biến i tại đây
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Next</a>
                </li>
            }
        </ul>
    </nav>
